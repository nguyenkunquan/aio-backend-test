server:
  port: ${SERVER_PORT:8081}
  servlet:
    context-path: /api/v1

spring:
  application:
    name: aio-scheduling-service

  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:aio-scheduling-service}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:sa123456}
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: ${DB_CONNECTION_TIMEOUT:30000}
      idle-timeout: ${DB_IDLE_TIMEOUT:600000}
      max-lifetime: ${DB_MAX_LIFETIME:1800000}
      maximum-pool-size: ${DB_POOL_SIZE:10}
      minimum-idle: ${DB_MIN_IDLE:5}

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true

  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true

  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      timeout: ${REDIS_TIMEOUT:2000ms}
      #password: ${REDIS_PASSWORD:}
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0

  jackson:
    serialization:
      write-dates-as-timestamps: false
    deserialization:
      fail-on-unknown-properties: false


external:
  data-service:
    url: ${DATA_SERVICE_URL:http://localhost:1975/api/v1}
    connection-timeout: 5s
    response-timeout: 10s
    reconnection-timeout: 10s

resilience4j:
  circuitbreaker:
    instances:
      dataService:
        register-health-indicator: true
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 50
        record-exceptions:
          - org.springframework.web.client.RestClientException
          - java.util.concurrent.TimeoutException
  retry:
    instances:
      dataService:
        max-attempts: 3
        wait-duration: 10s
        retry-exceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.reactive.function.client.WebClientRequestException
          - org.example.aioschedulingservice.application.exceptions.DataServiceException
        ignore-exceptions:
          - org.example.aioschedulingservice.application.exceptions.DataServiceNonRetryableException

async:
  core-pool-size: 5
  max-pool-size: 20
  queue-capacity: 100
  thread-name-prefix: schedule-async-

scheduler:
  job-cleanup-cron: ${SCHEDULER_CLEANUP_CRON:0 0 2 * * *}

# Scheduling Configuration
scheduling:
  rules:
    period-weeks: 4
    day-off:
      enabled: true
      days-per-week: 1
    avoid-morning-after-evening: true
    balance-shifts: true

logging:
  level:
    com.aio.schedulingservice: DEBUG
    org.springframework.web.client: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,circuitbreakers
  endpoint:
    health:
      show-details: always
  prometheus:
    metrics:
      export:
        enabled: true

---
spring:
  config:
    activate:
      on-profile: docker