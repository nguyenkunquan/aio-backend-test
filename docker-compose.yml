version: '3.8'

services:
  data-service:
      build: ./aio-data-service
      container_name: aio-data-service
      ports:
        - "1975:1975"
      environment:
        - SPRING_PROFILES_ACTIVE=docker
        - ELASTICSEARCH_HOST=elasticsearch
        - ELASTICSEARCH_PORT=9200
        - REDIS_HOST=redis
        - REDIS_PORT=6379
      depends_on:
        elasticsearch:
          condition: service_healthy
        redis:
          condition: service_healthy
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:1975/api/v1/actuator/health"]
        interval: 30s
        timeout: 10s
        retries: 5
        start_period: 60s
      networks:
        - aio-network
      restart: unless-stopped

  schedule-service:
    build: ./aio-scheduling-service
    container_name: aio-scheduling-service
    ports:
      - "8081:8081"
    environment:
      DB_HOST: postgres_db
      DB_PORT: 5432
      DB_NAME: aio-scheduling-service
      DB_USERNAME: postgres
      DB_PASSWORD: sa123456
      REDIS_HOST: redis
      REDIS_PORT: 6379
      DATA_SERVICE_URL: http://data-service:1975/api/v1
    depends_on:
      postgres_db:
        condition: service_healthy
      redis:
        condition: service_healthy
      data-service:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/api/v1/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - aio-network
    restart: unless-stopped
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.18.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:9200/_cluster/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aio-network

  redis:
    image: redis:7.2-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - aio-network

  postgres_db:
    image: postgres:16.2-alpine
    container_name: postgres_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: sa123456
      POSTGRES_DB: aio-scheduling-service
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./aio-scheduling-service/src/main/resources/db/migrations/V1__Initial_schema.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - aio-network

networks:
  aio-network:
    driver: bridge

volumes:
  elasticsearch_data:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local